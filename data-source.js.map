{"version":3,"file":"data-source.js","sourceRoot":"","sources":["src/data-source.ts"],"names":[],"mappings":"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","sourcesContent":["import '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/iron-icons/iron-icons.js';\nimport '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\n\nimport './filter-list';\n\nimport {LitElement, TemplateResult, html, css, nothing} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\nimport {Filter, FilterSource} from './filter-source';\n\nexport interface DataSource {\n    title: string;\n    description: string;\n    tags: Set<string>;\n    startTime: Date;\n    endTime: Date;\n    filters: FilterSource[];\n}\n\nexport enum DataSourceEvent {\n    REQUEST_EXPAND='request-expand',\n    REQUEST_CLOSE='request-close',\n}\n\n@customElement('data-source')\nexport class DataSourceElement extends LitElement {\n    \n    @property({type: Object}) data:DataSource = {\n        title: \"\",\n        description: \"\",\n        tags: new Set<string>([]),\n        startTime: new Date(0),\n        endTime: new Date(0),\n        filters: [],\n    };\n    \n    @property({type: Boolean}) expand = false;\n    @property({type: Boolean}) hide = false;\n    @property({type: Object}) showTags = new Set<string>([]);\n    @property({type: Boolean}) forExport = false;\n    @property({type: Object}) selectedStartTime = new Date(0);\n    @property({type: Object}) selectedEndTime = new Date(0);\n\n    static override styles = css`\n\n        article {\n            background-color: #e6e4e4;\n            border-radius: 8px;\n            margin: 15px;\n            padding: 30px;\n        }\n\n        h3 {\n            margin: 0;\n        }\n\n        .row {\n            align-items: center;\n            display: flex;\n            justify-content: space-between;\n        }\n\n        section > p > span {\n            font-weight: bold;\n        }\n\n        .tag {\n            background-color: springgreen;\n            color: white;\n            margin: 2px;\n            padding: 5px;\n            text-decoration: none;\n            border-radius: 8px;\n        }\n\n        .button-container {\n            margin-top: -20px;\n        }\n\n        .close-container {\n            margin-left: -20px;\n        }\n    `;\n\n    override render() {\n        if ((this.hide && !this.expand) || this.showTags.size && \n            ![...this.data.tags].filter(x => this.showTags.has(x)).length) {\n            return nothing;    \n        } else if (this.expand) {\n            return this.renderModal();\n        } else {\n            return this.renderSummary();\n        }\n    }\n\n    renderSummary() {\n        return html`\n            <article>\n                <h3>${this.data.title}</h3>\n                <p>${this.data.description}</p>\n                ${this.renderFilterSummary(this.forExport)}\n                ${this.renderTimeSummary(this.forExport)}\n                ${this.renderSummaryButtons()}\n            </article>\n        `;\n    }\n\n    renderFilterSummary(showChecked: boolean) {\n        const summary: TemplateResult[] = [];\n        for (const source of this.data.filters) {\n            const labels: TemplateResult[] = [];\n            function findLeafTags(filters: Filter[]) {\n                for (const filter of filters) {\n                    if (filter.options.length) {\n                        findLeafTags(filter.options);\n                    } else {\n                        if (!showChecked || filter.checked) {\n                            labels.push(\n                                html`<a class=\"tag\" href=\"#\">\n                                    ${filter.label}\n                                </a>`);\n                        }\n                    }\n                }\n            }\n            findLeafTags(source.filters)\n            summary.push(html`<p>\n                <span>${source.header}: </span>\n                ${labels}\n            </p>`);\n        }\n        return html`<section>\n            ${summary}\n        </section>`;\n    }\n\n    renderTimeSummary(showSelectedTime: boolean) {\n        function summarizeDate(d: Date) {\n            const year = d.getFullYear();\n            const date = d.getDate();\n            const months = [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December'\n            ];\n            const monthIndex = d.getMonth();\n            const monthName = months[monthIndex]\n            return `${monthName} ${date}, ${year}`\n        }\n        let startTime = this.data.startTime;\n        let endTime = this.data.startTime;\n        if (showSelectedTime) {\n            startTime = this.selectedStartTime;\n            endTime = this.selectedEndTime;\n        }\n        return html`<section>\n            <p>\n                <span>Time Range:</span>\n                ${summarizeDate(startTime)} to ${summarizeDate(endTime)}\n            </p>\n        </section>`;\n    }\n\n    renderSummaryButtons() {\n        let buttons = html`<paper-button\n            @click=\"${() => {\n                this.dispatchEvent(\n                    new CustomEvent(DataSourceEvent.REQUEST_EXPAND));\n            }}\">Select</paper-button>`;\n        if (this.forExport) {\n            buttons = html`<paper-button>Download</paper-button>`;\n        }\n        return buttons;\n    }\n\n    renderModal() {\n        return html`\n            <article>\n                <div class=\"row button-container\">\n                    <div class=\"row close-container\">\n                        <paper-icon-button\n                            icon=\"icons:close\"\n                            @click=\"${() => {\n                                this.dispatchEvent(\n                                    new CustomEvent(DataSourceEvent.REQUEST_CLOSE));\n                            }}\">\n                        </paper-icon-button>\n                        <h3>${this.data.title}</h3>\n                    </div>\n                    <div class=\"row\">\n                        <paper-button>Add to Queue</paper-button>\n                        <paper-button>Download Now <iron-icon icon=\"icons:arrow-drop-down\"></iron-icon></paper-button>\n                    </div>\n                </div>\n                <p>${this.data.description}</p>\n                <filter-list\n                    .filters=\"${this.data.filters}\">\n                </filter-list>\n            </article>`;\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'data-source': DataSourceElement;\n    }\n}\n"]}