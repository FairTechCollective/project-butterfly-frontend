{"version":3,"file":"data-source-list.js","sourceRoot":"","sources":["src/data-source-list.ts"],"names":[],"mappings":"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","sourcesContent":["import './filter-list';\nimport './data-source';\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {styleMap} from 'lit/directives/style-map.js'\n\nimport {Filter, FilterSource} from './filter-source';\nimport {DataSourceElement} from './data-source';\nimport {deepCopy} from './utils';\n\nconst FILTERS = [\n    {\n        header: 'Locations',\n        filters: [{\n            label: 'Bay Area',\n            tag: 'bay-area',\n            checked: false,\n            options: [\n                {\n                    label: 'Cities',\n                    tag: 'cities',\n                    checked: false,\n                    options: [\n                        {\n                            label: 'Benicia',\n                            tag: 'benicia',\n                            options: [],\n                            checked: false,\n                        },\n                        {\n                            label: 'Martinez',\n                            tag: 'martinez',\n                            options: [],\n                            checked: false,\n                        },\n                    ],\n                },\n                {\n                    label: 'Refineries',\n                    tag: 'refineries',\n                    checked: false,\n                    options: [\n                        {\n                            label: 'Valero Benicia',\n                            tag: 'valero-benicia',\n                            options: [],\n                            checked: false,\n                        },\n                        {\n                            label: 'Marathon Martinez',\n                            tag: 'marathon-martinez',\n                            options: [],\n                            checked: false,\n                        },\n                    ],\n                }\n            ],\n        }],\n    },\n    {\n        header: 'Chemicals',\n        filters: [\n            {\n                label: 'Benzene',\n                tag: 'benzene',\n                checked: false,\n                options: [] as Filter[],\n            },\n            {\n                label: 'Xylene',\n                tag: 'xylene',\n                checked: false,\n                options: [] as Filter[],\n            },\n            {\n                label: 'Carbon Monoxide',\n                tag: 'carbon-monoxide',\n                checked: false,\n                options: [] as Filter[],\n            },\n    ]},\n];\n\nconst DATA_SOURCES = [\n    {\n        title: 'The Benzene Report',\n        description: 'Refineries reporting of two-week average benzene levels to the EPA every three months.',\n        tags: new Set(['benzene', 'valero', 'valero-benicia', 'marathon-martinez', 'martinez', 'benicia']),\n        startTime: new Date(0),\n        endTime: new Date(0),\n        filters: deepCopy<FilterSource[]>(FILTERS),\n    },\n    {\n        title: \"Valero Benicia\",\n        description: \"Valero Refinery self reporting, real-time data\",\n        tags: new Set(['benzene', 'xylene', 'valero', 'valero-benicia', 'benicia']),\n        startTime: new Date(0),\n        endTime: new Date(0),\n        filters: deepCopy<FilterSource[]>(FILTERS),\n    },\n    {\n        title: \"Marathon Martinez\",\n        description: \"Marathon Martinez Refinery self reporting, real-time data\",\n        tags: new Set(['benzene', 'carbon-monoxide', 'martinez', 'marathon-martinez']),\n        startTime: new Date(0),\n        endTime: new Date(0),\n        filters: deepCopy<FilterSource[]>(FILTERS),\n    },\n]\n\n@customElement('data-source-list')\nexport class DataSourceList extends LitElement {\n\n    @property({type: Array}) dataSources = DATA_SOURCES;\n    @property({type: Object}) filterTags = new Set<string>();\n    @property({type: Object}) disableTags = new Set<string>();\n    @property({type: Boolean}) expanded = false;\n\n    static override styles = css`\n        .row {\n            display: flex;\n            justify-content: stretch;\n        }\n\n        filter-list {\n            flex-grow: 1;\n        }\n\n        .sources {\n            flex-grow: 5;\n            overflow: scroll;\n            height: calc(100vh - 100px);\n        }\n\n        data-source {\n            display: block;\n            position: relative;\n        }\n    `;\n\n    override render() {\n        return html`\n            <div class=\"row\">\n                <filter-list\n                    style=\"${styleMap({\n                        display: this.expanded ? 'none' : 'block',\n                    })}\"\n                    .filters=\"${FILTERS}\"\n                    .disableTags=\"${this.disableTags}\"\n                    @tags-changed=\"${this.handleTagsChanged}\">\n                </filter-list>\n                <div class=\"sources\">\n                    ${this.renderDataSources()}\n                </div>\n            </div>\n        `;\n    }\n\n    renderDataSources() {\n        return this.dataSources.map((data) => html`\n            <data-source\n                .data=\"${data}\"\n                .showTags=\"${this.filterTags}\"\n                .hide=\"${this.expanded}\"\n                @request-expand=\"${(e: CustomEvent) => {\n                    (e.target as DataSourceElement).expand = true;\n                    this.expanded = true;\n                }}\"\n                @request-close=\"${(e: CustomEvent) => {\n                    (e.target as DataSourceElement).expand = false;\n                    this.expanded = false;\n                }}\"\n                >\n            </data-source>\n        `);\n    }\n\n    handleTagsChanged(e: CustomEvent<Set<string>>) {\n        this.filterTags = e.detail;\n        if (this.filterTags.size === 0) {\n            this.disableTags = new Set<string>();\n            return;\n        }\n        const unfilteredTags = new Set<string>();\n        const filteredOutTags = new Set<string>();\n        for (const dataSource of this.dataSources) {\n            let hasTag = false;\n            for (const tag of dataSource.tags) {\n                if (this.filterTags.has(tag)) {\n                    hasTag = true;\n                }\n            }\n            if (hasTag) {\n                for (const tag of dataSource.tags) {\n                    unfilteredTags.add(tag);\n                }\n            } else {\n                for (const tag of dataSource.tags) {\n                    filteredOutTags.add(tag);\n                }\n            }\n        }\n        const disableTags = new Set([...filteredOutTags]\n                            .filter(x => !unfilteredTags.has(x)));\n        this.disableTags = disableTags;\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'data-source-list': DataSourceList;\n    }\n}"]}